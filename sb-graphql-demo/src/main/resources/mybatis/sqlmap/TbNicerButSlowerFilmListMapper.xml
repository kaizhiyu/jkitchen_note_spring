<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sauzny.sbgraphqldemo.dao.TbNicerButSlowerFilmListMapper">
  <resultMap id="BaseResultMap" type="com.sauzny.sbgraphqldemo.entity.pojo.TbNicerButSlowerFilmList">
    <result column="FID" jdbcType="SMALLINT" property="fid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="length" jdbcType="SMALLINT" property="length" />
    <result column="rating" jdbcType="CHAR" property="rating" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sauzny.sbgraphqldemo.entity.pojo.TbNicerButSlowerFilmListWithBLOBs">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="actors" jdbcType="LONGVARCHAR" property="actors" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    FID, title, category, price, length, rating
  </sql>
  <sql id="Blob_Column_List">
    description, actors
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sauzny.sbgraphqldemo.entity.pojo.TbNicerButSlowerFilmListExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from nicer_but_slower_film_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sauzny.sbgraphqldemo.entity.pojo.TbNicerButSlowerFilmListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nicer_but_slower_film_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.sauzny.sbgraphqldemo.entity.pojo.TbNicerButSlowerFilmListExample">
    delete from nicer_but_slower_film_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.sauzny.sbgraphqldemo.entity.pojo.TbNicerButSlowerFilmListWithBLOBs">
    insert into nicer_but_slower_film_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        FID,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="length != null">
        length,
      </if>
      <if test="rating != null">
        rating,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="actors != null">
        actors,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        #{fid,jdbcType=SMALLINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="length != null">
        #{length,jdbcType=SMALLINT},
      </if>
      <if test="rating != null">
        #{rating,jdbcType=CHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="actors != null">
        #{actors,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sauzny.sbgraphqldemo.entity.pojo.TbNicerButSlowerFilmListExample" resultType="java.lang.Long">
    select count(*) from nicer_but_slower_film_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nicer_but_slower_film_list
    <set>
      <if test="record.fid != null">
        FID = #{record.fid,jdbcType=SMALLINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.length != null">
        length = #{record.length,jdbcType=SMALLINT},
      </if>
      <if test="record.rating != null">
        rating = #{record.rating,jdbcType=CHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.actors != null">
        actors = #{record.actors,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update nicer_but_slower_film_list
    set FID = #{record.fid,jdbcType=SMALLINT},
      title = #{record.title,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      length = #{record.length,jdbcType=SMALLINT},
      rating = #{record.rating,jdbcType=CHAR},
      description = #{record.description,jdbcType=LONGVARCHAR},
      actors = #{record.actors,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nicer_but_slower_film_list
    set FID = #{record.fid,jdbcType=SMALLINT},
      title = #{record.title,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      length = #{record.length,jdbcType=SMALLINT},
      rating = #{record.rating,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>